test case,description,name,Completed,Passed,run flags
,,,FALSE,____,
single port write/read operation ( port A),"Goal: verify basic write and read operations on  port A
write random data and address
read from the same address
verify that read data equals previously written data",basic_write_read_porta,TRUE,PASS, +TEST=basic_write_read_porta +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
singe port write/read operation (port B) ,"Goal:  verify basic write and read operations on port B
write random data and address
read from the same address
verify that read data equals previously written data",basic_write_read_portb,TRUE,PASS, +TEST=basic_write_read_portb +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
basic write/read different ports,"Goal: ensure memory consistency across ports
select  port A for writing and port B for reading
write random data and random address on  port A
read data at the same address on port B
check if data written from  port A is the same as the data read from port B
",basic_porta_write_portb_read,TRUE,PASS, +TEST=basic_porta_write_portb_read +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
"fill memory with  port A, read entire memory with port B","Goal: test ability of  port A to fill memory and port B to read all memory
Write to all memory locations through Port A
Read all memory locations through port B
check if written data is equal to read data",fill_memory_porta_write_portb_read,TRUE,PASS, +TEST=fill_memory_porta_write_portb_read +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
simultaneous read from different addresses,"Goal: test ability of memory to handle reads from both ports simultaneously
read address from  port A
read different address from port B at same cycle
verify the read data is consistent and have not changed",simultaneous_read_different_address,TRUE,PASS, +TEST=simultaneous_read_different_address +NoOfTran=500 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
simultaneous write to differnt addreses,"Goal: test ability of memory to handle writes from both ports simultaneously
write to random address from  port A
write to different address from port B at same cycle
read data written and verify that it's consistent ",simultaneous_write_different_address,TRUE,PASS, +TEST=simultaneous_write_different_address +NoOfTran=500 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
simultaneous write to the same address,"Goal: check the behaviour of memory with collisions
write to address , random data on  port A
write to same address , random data , on port B at same cycle
Read same address verify arbitration logic",simultaneous_write_same_address,TRUE,PASS, +TEST=simultaneous_write_same_address +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
simultaneous write and read to the same address,"Goal: ensure consistency accessing data with different modes of operation
fill memory with one port
write with a port and read with a different port at the same address
ensure that the new value has been read not the old value",simultaneous_write_read_same_address,TRUE,PASS," +TEST=simultaneous_write_read_same_address +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log

 +TEST=simultaneous_write_read_same_address +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=1 -l out.log"
out of range memory access ,"Goal: check for out of range access handling
write on illegal addresses
try reading all memory
verify that memory was not affected",out_of_range_memory_access,TRUE,PASS, +TEST=out_of_range_memory_access +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
reset test,"Goal: write random data and random address
apply reset
read same address
should read default 0 value from memory",reset_test,TRUE,PASS, +TEST=reset_test +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
back to back transactions on  port A,"Goal: test handling of continous writing and reading on memory from  port A 
write random data with random address from port A continously
verify correct data ",B2B_transactions_porta,TRUE,PASS, +TEST=B2B_transactions_porta +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
back to back transactions on port B,"Goal: test handling of continous writing and reading on memory from port B
write random data with random address from port B continously
verify correct data and arbitration",B2B_transactions_portb,TRUE,PASS, +TEST=B2B_transactions_portb +NoOfTran=20 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
back to back transactions on both ports ,"Goal: test continuous transactions on memory from both ports
random read or write
put random data on memory with random addresses
check if reference model has the same data as the memory
",B2B_transactions_both_ports,TRUE,PASS, +TEST=B2B_transactions_both_ports +NoOfTran=500 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
default value test,"Goal: verify default value of memory
read random addresses from memory
ensure data read is 0",default_mem_value,TRUE,PASS, +TEST=default_mem_value +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
write during reset,"Goal: verify correct operation when writing while reset
hold reset for some time
write while reset is being held
verify that writes do not affect memory",write_during_reset,TRUE,FAIL, +TEST=write_during_reset +NoOfTran=100 +DisableDisplay=1 +portA_fill_portB_read=0 -l out.log
"fill memory with port B, read entire memory with  port A","Goal: test ability of port B to fill memory and  port A to read all memory
Write to all memory locations through port B
Read all memory locations through Port a
check if written data is equal to read data",fill_memory_portb_write_porta_read,FALSE,____,
"fill memory with  port A, read entire memory with  port A","Goal: test ability of port B to fill memory and  port A to read all memory
Write to all memory locations through Port a
Read all memory locations through Port a
check if written data is equal to read data",fill_memory_porta_write_porta_read,FALSE,____,
"fill memory with port B, read entire memory with port B","Goal: test ability of port B to fill memory and  port A to read all memory
Write to all memory locations through port B
Read all memory locations through port B
check if written data is equal to read data",fill_memory_portb_write_portb_read,FALSE,____,
back to back reads on  port A,"Goal: test handling of continously reading memory from  port A
read random address from  port A continously
verify correct data and arbitration",B2B_reads_porta,FALSE,____,
back to back reads on port B,"Goal: test handling of continously reading memory from port B
read random address from port B continously
verify correct data and arbitration",B2B_reads_portb,FALSE,____,
back to back transactions on both ports ,"put random data writes on memory with random addresses on  port A and port B
random write or read operation
include a chance of collision",,FALSE,____,
minimum cycle reads,"test the minimal delay scenario
select random port
initiate write operation
apply data
wait for one cycle
read data
should be able to handle one cycle delays with the data written equal to the read",,FALSE,____,
large cycle delays,"test the large delay scenario
select random port
initiate write operation
apply data
wait for large delay
read data
should be able to handle large cycle delays with the data written equal to the read",,FALSE,____,
fill entire memory,"Goal: test the ability of the memory to access all addresses
write random data on all addresses: minimum address up to max
read from the minimum addresses up to max,
check written data is equal to ones read",fill_memory,FALSE,____,